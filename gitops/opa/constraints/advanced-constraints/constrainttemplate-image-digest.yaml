apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8srequireimagedigest
spec:
  crd:
    spec:
      names:
        kind: K8sRequireImageDigest
      validation:
        openAPIV3Schema:
          type: object
          properties:
            exemptImages:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srequireimagedigest

        violation[{"msg": msg}] {
          container := input.review.object.spec.containers[_]
          not image_has_digest(container.image)
          not image_exempt(container.image)
          msg := sprintf("Container '%v' image '%v' must use digest (@sha256:) instead of tag", [container.name, container.image])
        }

        violation[{"msg": msg}] {
          container := input.review.object.spec.initContainers[_]
          not image_has_digest(container.image)
          not image_exempt(container.image)
          msg := sprintf("Init container '%v' image '%v' must use digest (@sha256:) instead of tag", [container.name, container.image])
        }

        image_has_digest(image) {
          contains(image, "@sha256:")
        }

        image_exempt(image) {
          exempt := input.parameters.exemptImages[_]
          startswith(image, exempt)
        }
