apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8srequireseccomp
spec:
  crd:
    spec:
      names:
        kind: K8sRequireSeccomp
      validation:
        openAPIV3Schema:
          type: object
          properties:
            allowedProfiles:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srequireseccomp

        violation[{"msg": msg}] {
          container := input.review.object.spec.containers[_]
          not has_seccomp_profile(container)
          msg := sprintf("Container '%v' must specify a seccomp profile", [container.name])
        }

        violation[{"msg": msg}] {
          container := input.review.object.spec.containers[_]
          profile := get_seccomp_profile(container)
          profile != ""
          not profile_allowed(profile)
          msg := sprintf("Container '%v' seccomp profile '%v' is not allowed", [container.name, profile])
        }

        violation[{"msg": msg}] {
          # VÃ©rifier le seccomp au niveau du pod
          not has_pod_seccomp_profile
          msg := "Pod must specify a seccomp profile"
        }

        has_seccomp_profile(container) {
          container.securityContext.seccompProfile
        }

        has_pod_seccomp_profile {
          input.review.object.spec.securityContext.seccompProfile
        }

        get_seccomp_profile(container) = profile {
          profile := container.securityContext.seccompProfile.type
        }

        get_seccomp_profile(container) = profile {
          not container.securityContext.seccompProfile
          profile := input.review.object.spec.securityContext.seccompProfile.type
        }

        profile_allowed(profile) {
          allowed := input.parameters.allowedProfiles[_]
          profile == allowed
        }
