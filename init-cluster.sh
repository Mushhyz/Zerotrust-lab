#!/bin/bash

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${YELLOW}üöÄ Initialisation du cluster Kubernetes pour Zero Trust Lab${NC}"
echo "================================================================"

# V√©rification des pr√©requis
echo -e "\n${YELLOW}üîç V√©rification des pr√©requis...${NC}"

# V√©rifier kubectl
if ! command -v kubectl &> /dev/null; then
    echo -e "${RED}‚ùå kubectl n'est pas install√©${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ kubectl trouv√©${NC}"

# V√©rifier helm
if ! command -v helm &> /dev/null; then
    echo -e "${RED}‚ùå helm n'est pas install√©${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ helm trouv√©${NC}"

# V√©rifier terraform
if ! command -v terraform &> /dev/null; then
    echo -e "${RED}‚ùå terraform n'est pas install√©${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ terraform trouv√©${NC}"

# V√©rifier la connexion au cluster
echo -e "\n${YELLOW}üîó V√©rification de la connexion au cluster...${NC}"
if ! kubectl cluster-info &> /dev/null; then
    echo -e "${RED}‚ùå Impossible de se connecter au cluster Kubernetes${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ Connexion au cluster OK${NC}"

# V√©rifier si NGINX Ingress Controller est d√©j√† install√©
echo -e "\n${YELLOW}üåê V√©rification de NGINX Ingress Controller...${NC}"
if kubectl get namespace ingress-nginx &> /dev/null; then
    echo -e "${GREEN}‚úÖ NGINX Ingress Controller d√©j√† install√©${NC}"
else
    echo -e "${YELLOW}üåê Installation de NGINX Ingress Controller...${NC}"
    kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
    
    # Attendre que l'ingress controller soit pr√™t
    echo -e "${YELLOW}‚è≥ Attente du d√©marrage de NGINX Ingress Controller...${NC}"
    kubectl wait --namespace ingress-nginx \
        --for=condition=ready pod \
        --selector=app.kubernetes.io/component=controller \
        --timeout=300s
    
    echo -e "${GREEN}‚úÖ NGINX Ingress Controller install√©${NC}"
fi

# Mise √† jour des repositories Helm
echo -e "\n${YELLOW}üì¶ Mise √† jour des repositories Helm...${NC}"
helm repo add bitnami https://charts.bitnami.com/bitnami
helm repo add hashicorp https://helm.releases.hashicorp.com
helm repo add gitea-charts https://dl.gitea.io/charts/
helm repo add gatekeeper https://open-policy-agent.github.io/gatekeeper/charts
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo add grafana https://grafana.github.io/helm-charts
helm repo update

echo -e "${GREEN}‚úÖ Repositories Helm mis √† jour${NC}"

# Configuration des alias DNS locaux
echo -e "\n${YELLOW}üîß Configuration des alias DNS locaux...${NC}"
cat << EOF
Ajoutez les lignes suivantes √† votre fichier /etc/hosts (Linux/Mac) ou C:\\Windows\\System32\\drivers\\etc\\hosts (Windows):

127.0.0.1 keycloak.localhost
127.0.0.1 grafana.localhost
127.0.0.1 gitea.localhost
127.0.0.1 vault.localhost
127.0.0.1 prometheus.localhost
127.0.0.1 loki.localhost
EOF

echo -e "\n${GREEN}‚úÖ Initialisation du cluster termin√©e avec succ√®s!${NC}"
echo -e "${YELLOW}üöÄ Vous pouvez maintenant ex√©cuter: make deploy${NC}"
